@import 'tailwindcss';

@custom-variant dark (&:is(.dark *));

/* Keyframes and utility classes are preserved */
@keyframes accordion-down {
  from {
    height: 0;
  }
  to {
    height: var(--radix-accordion-content-height);
  }
}
@keyframes accordion-up {
  from {
    height: var(--radix-accordion-content-height);
  }
  to {
    height: 0;
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@layer base {
    :root {
      /* MD3 Light Mode Core Roles */
      --primary: 200 85% 45%;
      --on-primary: 200 20% 98%;
      --primary-container: 200 75% 90%;
      --on-primary-container: 200 90% 25%;

      --secondary: 30 85% 50%;
      --on-secondary: 30 20% 98%;
      --secondary-container: 30 75% 92%;
      --on-secondary-container: 30 90% 20%;

      --tertiary: 180 65% 40%;
      --on-tertiary: 180 15% 98%;
      --tertiary-container: 180 60% 90%;
      --on-tertiary-container: 180 70% 20%;

      --error: 0 70% 55%; /* Red e.g. #D32F2F */
      --on-error: 0 0% 100%; /* White */
      --error-container: 0 70% 90%; /* Light Red */
      --on-error-container: 0 70% 20%; /* Dark Red */

      --background: 233 20% 99%; /* Almost White, slightly cool e.g. #F8F9FA */
      --on-background: 0 0% 10%; /* Dark Gray for text e.g. #1C1B1F */

      --surface: 233 20% 99%; /* Same as background */
      --on-surface: 0 0% 10%; /* Dark Gray for text */
      --surface-variant: 233 15% 94%; /* Neutral e.g. #E0E0E0 */
      --on-surface-variant: 0 0% 28%; /* Neutral text e.g. #49454F */
      
      --outline: 0 0% 75%; /* Neutral border e.g. #79747E */
      --outline-variant: 0 0% 80%; /* Lighter neutral border */

      --shadow: 0 0% 0%; /* Base for shadow color (alpha will be applied) */
      --surface-tint-color: var(--primary);

      /* Radii */
      --radius-xs: 0.25rem; /* 4px */
      --radius-sm: 0.5rem;  /* 8px */
      --radius-md: 0.75rem; /* 12px */
      --radius-lg: 1rem;    /* 16px */
      --radius-xl: 1.75rem; /* 28px */
      --radius: var(--radius-sm); /* Default global radius */
    }

    .dark {
      /* MD3 Dark Mode Core Roles */
      --primary: 200 80% 75%;
      --on-primary: 200 90% 15%;
      --primary-container: 200 70% 25%;
      --on-primary-container: 200 75% 85%;

      --secondary: 30 80% 78%;
      --on-secondary: 30 90% 12%;
      --secondary-container: 30 70% 22%;
      --on-secondary-container: 30 75% 88%;
      
      --tertiary: 180 60% 70%;
      --on-tertiary: 180 70% 10%;
      --tertiary-container: 180 50% 20%;
      --on-tertiary-container: 180 60% 80%;

      --error: 0 60% 70%; /* Dark mode error red e.g. #EF9A9A */
      --on-error: 0 70% 15%; /* Dark red text */
      --error-container: 0 70% 25%; /* Dark red container */
      --on-error-container: 0 60% 85%; /* Lighter red text */

      --background: 233 10% 12%; /* Dark Cool Gray e.g. #121212 or #1C1B1F */
      --on-background: 0 0% 90%; /* Light Gray text e.g. #E6E1E5 */

      --surface: 233 10% 12%; /* Same as background */
      --on-surface: 0 0% 90%; /* Light Gray text */
      --surface-variant: 233 8% 18%; /* Slightly Lighter Dark Gray e.g. #2C2B2F */
      --on-surface-variant: 0 0% 78%; /* Medium Gray text e.g. #CAC4D0 */

      --outline: 0 0% 40%; /* Dark mode border e.g. #444444 or #938F99 */
      --outline-variant: 0 0% 30%; 
    }
  }

  @layer base {
    * {
      /* The old @apply border-border; was based on the old --border variable.
         MD3 uses --outline for primary borders.
         Need to ensure Tailwind generates border-outline utility.
         For now, let's use the CSS variable directly.
      */
      border-color: hsl(var(--outline));
    }
    body {
      background-color: hsl(var(--background));
      color: hsl(var(--on-background));
      /* @apply bg-background text-foreground; */ /* Old classes based on old variables */
    }
  }